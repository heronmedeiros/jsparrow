= sparrow

Sparrow is a JMS client based on JRuby.

=== Install

Make gem install:

  sudo gem install sparrow -s http://gemcutter.org

WARNING: Unavailable for now, because already have a gem named sparrow.

=== Example

===== Three steps to send and receive JMS messages to/from a Java EE application server.

WARNING: OpenJMS will be used as JMS middleware, but any other could be used with no problems.

1) Create my_sparrow_test.rb file and require the gems

  require 'rubygems'
  require 'sparrow'

2) Create and setup a sparrow JMS client

  jms_client = Sparrow::Connection::Client.new do |properties|
	  properties.client_jar_file         = '/opt/openjms/lib/openjms-0.7.7-beta-1.jar'
	  properties.initial_context_factory = 'org.exolab.jms.jndi.InitialContextFactory'
	  properties.provider_url            = 'tcp://localhost:3035'
	  # properties.security_principal    = ''
	  # properties.security_credentials  = ''
  end

  jms_client.enable_connection_factories(
      :queue_connection_factory => 'ConnectionFactory'
    )
    
  jms_client.enable_queues(
      :my_queue => 'MyQueue'
    )

3) OK! You can send and receive messages right now!

  jms_client.queue_sender(:my_queue).send_text_message('sparrow rocks!') do |msg|
    msg.set_string_property('recipient', 'sparrow-example')
  end

  jms_client.queue_receiver(:my_queue).receive_message(
      :timeout  => 5000,
      :selector => "recipient = 'sparrow-example'"
    ) do |msg|
    
    puts msg.is_text_message?    # true
    puts msg.text                # sparrow rocks!
  end

So, now start the OC4J server, create the connection factory (ConnectionFactory) and queue (MyQueue), and run above script:

  jruby my_sparrow_test.rb

sparrow rocks! =)

== Copyright

Copyright (c) 2009 Leandro Silva <leandrodoze@gmail.com>. See LICENSE for details.
